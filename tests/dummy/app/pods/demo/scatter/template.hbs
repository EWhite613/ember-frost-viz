<div class="scatter left">
  <h1>Scatter Plot</h1>

  <p>
    A scatter plot distributes a number of discrete points over a coordinate transform. To highlight event frequency,
    many points may be alpha blended together.
  </p>

  <div class="element-count">
    Plotting {{model.data.length}} elements
  </div>

  <!-- BEGIN-SNIPPET demo-scatter -->

  <!-- Chart element. -->
  {{#frost-viz/chart model.data
    as |chart|
  }}

    <!-- Chart has a cartesian transform. (x right, y up).
    The transform translates data attributes to coordinates via the dimensions. -->
    {{#frost-viz/transform/cartesian chart
      dataBindings=(hash
        x=(frost-viz/binding (frost-viz/dimension/time   chart) 'time')
        y=(frost-viz/binding (frost-viz/dimension/linear chart) 'value')
      )
      as |transform dataBindings|
    }}

      <!-- Add scale components. These report their styled area (defined here in CSS)
      and the rest of the chart responsively resizes to their dimensions. -->
      {{frost-viz/scale transform dataBindings.x align="bottom" ticks=10 tickLabelFormat=(frost-viz/format/time '%H:%M')}}
      {{frost-viz/scale transform dataBindings.y align="left"   ticks=10 tickLabelFormat=(frost-viz/format/numeric)}}

      <!-- Scatter plot component. Uses the normalized x and y from the transform to yield one element per data point. -->
      {{#frost-viz/plot/scatter transform
        as |item data|
      }}

        <!-- These data points will be plotted using stars. The star element will be drawn at (cx,cy) as specified. -->
        {{frost-viz/plot/element/symbol/star item data
          cx=     item.x
          cy=     item.y
          theta=  model.clock.interval
        }}

      {{/frost-viz/plot/scatter}}

    {{/frost-viz/transform/cartesian}}

  {{/frost-viz/chart}}
  <!-- END-SNIPPET -->

  <div class="source">
    {{code-snippet name="demo-scatter.hbs"}}
  </div>

</div>
